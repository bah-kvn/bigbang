apiVersion: v1
kind: Pod
metadata:
  annotations:
    bigbang.dev/istioVersion: 1.13.2
    cni.projectcalico.org/containerID: 6cfe8b184982e94e4078d8e26bbc854a643451947258b0f62f136a2de4171263
    cni.projectcalico.org/podIP: 10.42.40.63/32
    cni.projectcalico.org/podIPs: 10.42.40.63/32
    kubectl.kubernetes.io/default-container: vault
    kubectl.kubernetes.io/default-logs-container: vault
    kubernetes.io/psp: global-unrestricted-psp
    prometheus.io/path: /stats/prometheus
    prometheus.io/port: "15020"
    prometheus.io/scrape: "true"
    sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":["private-registry"],"revision":"default"}'
  labels:
    app.kubernetes.io/instance: vault-vault
    app.kubernetes.io/name: vault
    component: server
    controller-revision-hash: vault-vault-7c4cb898
    helm.sh/chart: vault-0.19.0-bb.6
    security.istio.io/tlsMode: istio
    service.istio.io/canonical-name: vault
    service.istio.io/canonical-revision: latest
    statefulset.kubernetes.io/pod-name: vault-vault-0
  name: vault-vault-0
  namespace: vault
spec:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/instance: vault-vault
            app.kubernetes.io/name: vault
            component: server
        topologyKey: kubernetes.io/hostname
  containers:
  - args:
    - proxy
    - sidecar
    - --domain
    - $(POD_NAMESPACE).svc.cluster.local
    - --proxyLogLevel=warning
    - --proxyComponentLogLevel=misc:error
    - --log_output_level=default:info
    - --concurrency
    - "2"
    env:
    - name: JWT_POLICY
      value: third-party-jwt
    - name: PILOT_CERT_PROVIDER
      value: istiod
    - name: CA_ADDR
      value: istiod.istio-system.svc:15012
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: INSTANCE_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: SERVICE_ACCOUNT
      valueFrom:
        fieldRef:
          fieldPath: spec.serviceAccountName
    - name: HOST_IP
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    - name: PROXY_CONFIG
      value: |
        {"zipkinAddress":"jaeger-collector.jaeger.svc:9411","tracing":{"zipkin":{"address":"jaeger-collector.jaeger.svc:9411"},"sampling":10},"holdApplicationUntilProxyStarts":true}
    - name: ISTIO_META_POD_PORTS
      value: |-
        [
            {"name":"https","containerPort":8200,"protocol":"TCP"}
            ,{"name":"https-internal","containerPort":8201,"protocol":"TCP"}
            ,{"name":"https-rep","containerPort":8202,"protocol":"TCP"}
        ]
    - name: ISTIO_META_APP_CONTAINERS
      value: vault
    - name: ISTIO_META_CLUSTER_ID
      value: Kubernetes
    - name: ISTIO_META_INTERCEPTION_MODE
      value: REDIRECT
    - name: ISTIO_META_WORKLOAD_NAME
      value: vault-vault
    - name: ISTIO_META_OWNER
      value: kubernetes://apis/apps/v1/namespaces/vault/statefulsets/vault-vault
    - name: ISTIO_META_MESH_ID
      value: cluster.local
    - name: TRUST_DOMAIN
      value: cluster.local
    image: registry1.dso.mil/ironbank/opensource/istio/proxyv2:1.13.2
    lifecycle:
      postStart:
        exec:
          command:
          - pilot-agent
          - wait
    name: istio-proxy
    ports:
    - containerPort: 15090
      name: http-envoy-prom
    readinessProbe:
      failureThreshold: 30
      httpGet:
        path: /healthz/ready
        port: 15021
      initialDelaySeconds: 1
      periodSeconds: 2
      timeoutSeconds: 3
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: true
      runAsGroup: 1337
      runAsNonRoot: true
      runAsUser: 1337
    volumeMounts:
    - mountPath: /var/run/secrets/istio
      name: istiod-ca-cert
    - mountPath: /var/lib/istio/data
      name: istio-data
    - mountPath: /etc/istio/proxy
      name: istio-envoy
    - mountPath: /var/run/secrets/tokens
      name: istio-token
    - mountPath: /etc/istio/pod
      name: istio-podinfo
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-mt442
      readOnly: true
  - args:
    - "cp /vault/config/extraconfig-from-values.hcl /tmp/storageconfig.hcl;\n[ -n
      \"${HOST_IP}\" ] && sed -Ei \"s|HOST_IP|${HOST_IP?}|g\" /tmp/storageconfig.hcl;\n[
      -n \"${POD_IP}\" ] && sed -Ei \"s|POD_IP|${POD_IP?}|g\" /tmp/storageconfig.hcl;\n[
      -n \"${HOSTNAME}\" ] && sed -Ei \"s|HOSTNAME|${HOSTNAME?}|g\" /tmp/storageconfig.hcl;\n[
      -n \"${API_ADDR}\" ] && sed -Ei \"s|API_ADDR|${API_ADDR?}|g\" /tmp/storageconfig.hcl;\n[
      -n \"${TRANSIT_ADDR}\" ] && sed -Ei \"s|TRANSIT_ADDR|${TRANSIT_ADDR?}|g\" /tmp/storageconfig.hcl;\n[
      -n \"${RAFT_ADDR}\" ] && sed -Ei \"s|RAFT_ADDR|${RAFT_ADDR?}|g\" /tmp/storageconfig.hcl;\n/usr/local/bin/docker-entrypoint.sh
      vault server -config=/tmp/storageconfig.hcl \n"
    command:
    - /bin/sh
    - -ec
    env:
    - name: HOST_IP
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: VAULT_K8S_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: VAULT_K8S_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: VAULT_ADDR
      value: https://127.0.0.1:8200
    - name: VAULT_API_ADDR
      value: https://$(POD_IP):8200
    - name: SKIP_CHOWN
      value: "true"
    - name: SKIP_SETCAP
      value: "true"
    - name: HOSTNAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: VAULT_CLUSTER_ADDR
      value: https://$(HOSTNAME).vault-vault-internal:8201
    - name: VAULT_RAFT_NODE_ID
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: HOME
      value: /home/vault
    - name: VAULT_ADDR
      value: https://127.0.0.1:8200
    - name: VAULT_API_ADDR
      value: https://vault.dev.bahsoftwarefactory.com
    - name: VAULT_LOG_FORMAT
      value: json
    - name: VAULT_SKIP_VERIFY
      value: "true"
    image: registry1.dso.mil/ironbank/hashicorp/vault/vault:1.9.4
    lifecycle:
      preStop:
        exec:
          command:
          - /bin/sh
          - -c
          - sleep 5 && kill -SIGTERM $(pidof vault)
    name: vault
    ports:
    - containerPort: 8200
      name: https
    - containerPort: 8201
      name: https-internal
    - containerPort: 8202
      name: https-rep
    readinessProbe:
      exec:
        command:
        - /bin/sh
        - -ec
        - vault status -tls-skip-verify
      failureThreshold: 2
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 3
    resources:
      limits:
        cpu: "2"
        memory: 8Gi
    securityContext:
      allowPrivilegeEscalation: false
    volumeMounts:
    - mountPath: /vault/audit
      name: audit
    - mountPath: /vault/data
      name: data
    - mountPath: /vault/config
      name: config
    - mountPath: /vault/userconfig/vault-server-tls
      name: userconfig-vault-server-tls
      readOnly: true
    - mountPath: /home/vault
      name: home
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-mt442
      readOnly: true
  hostname: vault-vault-0
  imagePullSecrets:
  - name: private-registry
  initContainers:
  - args:
    - istio-iptables
    - -p
    - "15001"
    - -z
    - "15006"
    - -u
    - "1337"
    - -m
    - REDIRECT
    - -i
    - '*'
    - -x
    - ""
    - -b
    - '*'
    - -d
    - 15090,15021,15020
    image: registry1.dso.mil/ironbank/opensource/istio/proxyv2:1.13.2
    name: istio-init
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_ADMIN
        - NET_RAW
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: false
      runAsGroup: 0
      runAsNonRoot: false
      runAsUser: 0
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-mt442
      readOnly: true
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  securityContext:
    fsGroup: 1337
    runAsGroup: 1000
    runAsNonRoot: true
    runAsUser: 100
  serviceAccountName: vault-vault
  subdomain: vault-vault-internal
  terminationGracePeriodSeconds: 10
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - emptyDir:
      medium: Memory
    name: istio-envoy
  - name: istio-data
  - downwardAPI:
      items:
      - fieldRef:
          fieldPath: metadata.labels
        path: labels
      - fieldRef:
          fieldPath: metadata.annotations
        path: annotations
    name: istio-podinfo
  - name: istio-token
    projected:
      sources:
      - serviceAccountToken:
          audience: istio-ca
          expirationSeconds: 43200
          path: istio-token
  - configMap:
      name: istio-ca-root-cert
    name: istiod-ca-cert
  - name: data
    persistentVolumeClaim:
      claimName: data-vault-vault-0
  - name: audit
    persistentVolumeClaim:
      claimName: audit-vault-vault-0
  - configMap:
      name: vault-vault-config
    name: config
  - name: userconfig-vault-server-tls
    secret:
      secretName: vault-server-tls
  - name: home
  - name: kube-api-access-mt442
    projected:
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              fieldPath: metadata.namespace
            path: namespace
