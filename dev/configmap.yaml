domain: dev.bahsoftwarefactory.com

istio:
  enabled: true
  ingressGateways:
    public-ingressgateway:
      type: "LoadBalancer"
      kubernetesResourceSpec:
        serviceAnnotations:
          service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: "kubernetes.io/cluster/c-m-8slnllj8=owned,environment=development"
          service.beta.kubernetes.io/aws-load-balancer-attributes: "load_balancing.cross_zone.enabled=false,deletion_protection.enabled=false"
          service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "false"
          service.beta.kubernetes.io/aws-load-balancer-subnets: "subnet-08942469f925d9b66,subnet-04987f9522e27a836,subnet-069fd7685cca4018a"
          service.beta.kubernetes.io/aws-load-balancer-type: nlb

  # The following config is in the secrets.enc.yaml file due to the inability to merge lists of maps
  # gateways:
  #   public:
  #     servers:
  #     - hosts:
  #       - "*.{{ .Values.domain }}"
  #       tls:
  #         key: <encrypted>
  #         cert: <encrypted>
  #     - hosts:
  #       - "keycloak.{{ .Values.domain }}"
  #       tls:
  #         mode: "PASSTHROUGH"


istiooperator:
  enabled: true

kiali:
  enabled: true

jaeger:
  enabled: true

eckoperator:
  enabled: false

flux:
  interval: 1m
  rollback:
    cleanupOnFail: false

logging:
  enabled: false
  values:
    elasticsearch:
      master:
        count: 1
        persistence:
          size: 256Mi
        resources:
          requests:
            cpu: 200m
            memory: 1Gi
      data:
        count: 1
        persistence:
          size: 256Mi
        resources:
          requests:
            cpu: 200m
            memory: 1Gi
    kibana:
      count: 1
      resources:
        requests:
          cpu: 200m
          memory: 512Mi

monitoring:
  enabled: false
  values:
    prometheus:
      prometheusSpec:
        resources:
          requests:
            cpu: 200m
            memory: 1Gi

fluentbit:
  enabled: false
  values:
    securityContext:
      privileged: false

clusterAuditor:
  enabled: false

gatekeeper:
  enabled: false
  values:
    violations:
      allowedDockerRegistries:
        parameters:
          repos:
            - registry1.dso.mil
            - k8s.gcr.io
            - registry.uip.sh
    replicas: 1
    controllerManager:
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
    audit:
      resources:
        requests:
          cpu: 200m
          memory: 256Mi

kyverno:
  enabled: false
  values:
    replicaCount: 1

twistlock:
  enabled: false
  values:
    console:
      persistence:
        size: 256Mi

addons:
  gitlab:
    enabled: false
    hostnames:
      gitlab: gitlab
      registry: gitlab-registry
    values:
      gitlab:
        webservice:
          minReplicas: 1
          maxReplicas: 1
          helmTests:
            enabled: false
        gitlab-shell:
          minReplicas: 1
          maxReplicas: 1
        sidekiq:
          minReplicas: 1
          maxReplicas: 1
      registry:
        hpa:
          minReplicas: 1
          maxReplicas: 1
      global:
        extraEnvFrom:
          OAUTH_GITHUB_API_KEY:
            secretKeyRef:
              name: github-oauth
              key: key
          OAUTH_GITHUB_APP_SECRET:
            secretKeyRef:
              name: github-oauth
              key: secret
          OAUTH_GITHUB_URL:
            secretKeyRef:
              name: github-oauth
              key: url
        appConfig:
          object_store:
            enabled: true
          defaultCanCreateGroup: true
          enableUsagePing: true
          enableImpersonation: true
          defaultTheme: 11
          defaultProjectsFeatures:
            issues: true
            mergeRequests: true
            wiki: true
            snippets: true
            builds: true
            containerRegistry: true
          omniauth:
            enabled: true
            allowSingleSignOn: ['github']
            autoLinkUser: true
            autoSignInWithProvider: 'github'
            syncProfileFromProvider: ['github']
            syncProfileAttributes: ['name', 'email']
            blockAutoCreatedUsers: false
            providers:
              - secret: github
  vault:
    enabled: false
    ingress:
      gateway: "passthrough"
      key: |-
        -----BEGIN PRIVATE KEY-----
        MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCsxNd8683jOqDj
        nOz1NVP+DwiSL6DpUjldwxl5mDxqSgo4khUJTPrfF4RgBLMwKH1PmI3Mqc6b5rg/
        Yt0mX5UadywNTQRz8sg+tiuAX5yeOyXTBAVkzjVlE+BY02Pzzz61G4Vmj9gPaOay
        Rn4NEvST6nDoY/UWx441ibTYxaxWeiaxTw2SU0wDlNX5iqZkdkX3fkxY/QvYEM2R
        Ogc5teh0xfi6J1FBXr88sF7gnFlP46zfRkH+JFjPfilPgFpL98rPTorOIxEiGT36
        Tiu5vGAV1QQVzxoAaVLejeP+9blJ3wbJIS+baXxsVmS2ZSkPLyIBwdQYQM5HPWvr
        tLnlAfl3AgMBAAECggEAc3v0SpVYf14uM1cu8U1fQoCMCyN5HN0QaYNDIQtIvweU
        w3GqTBg/zSXsHz6lBDjcYnsntbl/2KglWoFcMA1OHm2wbYegxVxwy7J7a4j9qKsC
        woV6kYJhIJpjqRxMQKm0Udz+k6rtEofdRSdnlJeqEsFwDXbbWgm0HkdZMlkXtIlC
        R8yhL82pcjAMLgep7BnHFF+Zvtxujkt2YcupvW/4MSHUy1fl8mXYBsodO8gyRLU5
        fJ06e8p3P1129jH2JMeXxSaB+LC8S761mxBy1TyYpWChYja56Rc8+nWqexcp0hT1
        fEfRSpKcopBprmlyZjdPdBxB7wRurzs7cb84w6Zb2QKBgQDhR4yAMtJX6AJHGbUq
        uJggb4q5NpaiygzcgjPfIgmShC81qYyTqHHQ0/51PmhnkmOV1Ic4bqJ3a53Qfl1B
        0hlXjAiNihkfuYWi3h+0LN8ybvZnIRi7ev0x9H3s8LBVcCIdNRmtxl/CQhfHiGpK
        DjCnIdQmKmNfnI++r4p4HhdwBQKBgQDEVCloyEu//9E8mUzL6gY6cHkO98wvDnWc
        j7va752Tjm+h2PwdScE2EuUvpiIe0Gt0UOijjoIjKEzjVzlP0weR6MTDqwCyuxRc
        UdJSg5TcnyR3My6fXX8e3WmfCCMa2qCjAEdEA5cj9d2+10xDzkn6aF2ckMnT+iAl
        sZY361QISwKBgBn1pLshIBwBIEIRNE839k/GirXNFI6tuc2vM0sDIRdBJC+K2igp
        wPPPegMIrf9BXzhkxTA7j30zaXwdE6ICE+mCuXmV8E83ka6y6fRZN18Yakx4A+GW
        ypZ3Fgu3sJon0caL1+muclpwQ0066wSdnf2kaE39lHXwFKBkmhA9Z3YBAoGAFMEQ
        35LM7y8L32wVQjkrD2J0abCoVREiPbq0ESDjd4XHJ0TY4f+5/Q1iTPczBC7kLReg
        gCnAeBb6ic3esSGN207P/h9Fo59DN78ujKp8QhZQtIkklJQ9q/WcBMPHcj9KW/Db
        l8UJZTPIjTQVS9Wy3FXMD5D+xPncDCAJ0T9/UqECgYEAoqWXj433vr0XFvpGdixK
        vN3FVC6gkOvApLQoSeKSWwtpg/Hvzlsdw+sgVz113XIcEL4hL6nQzi8r3aItmE5i
        zvYKgRQqJK/6N14O6D2sEAy6B02gUBLufGLIHKeAHCH8DFq0Kl+3r76U3nSi9HHx
        +XYRw44nBwWJSGltX7sDI6U=
        -----END PRIVATE KEY-----
      cert: |-
        -----BEGIN CERTIFICATE-----
        MIIFRTCCBC2gAwIBAgISBB+e5F07Gn2qAmph7bx+aHreMA0GCSqGSIb3DQEBCwUA
        MDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD
        EwJSMzAeFw0yMjA1MTcxODM3MTJaFw0yMjA4MTUxODM3MTFaMCsxKTAnBgNVBAMT
        IHZhdWx0LmRldi5iYWhzb2Z0d2FyZWZhY3RvcnkuY29tMIIBIjANBgkqhkiG9w0B
        AQEFAAOCAQ8AMIIBCgKCAQEArMTXfOvN4zqg45zs9TVT/g8Iki+g6VI5XcMZeZg8
        akoKOJIVCUz63xeEYASzMCh9T5iNzKnOm+a4P2LdJl+VGncsDU0Ec/LIPrYrgF+c
        njsl0wQFZM41ZRPgWNNj888+tRuFZo/YD2jmskZ+DRL0k+pw6GP1FseONYm02MWs
        VnomsU8NklNMA5TV+YqmZHZF935MWP0L2BDNkToHObXodMX4uidRQV6/PLBe4JxZ
        T+Os30ZB/iRYz34pT4BaS/fKz06KziMRIhk9+k4rubxgFdUEFc8aAGlS3o3j/vW5
        Sd8GySEvm2l8bFZktmUpDy8iAcHUGEDORz1r67S55QH5dwIDAQABo4ICWjCCAlYw
        DgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAM
        BgNVHRMBAf8EAjAAMB0GA1UdDgQWBBS/4x9HMmHp1gaUix+U8E42RF4JHzAfBgNV
        HSMEGDAWgBQULrMXt1hWy65QCUDmH6+dixTCxjBVBggrBgEFBQcBAQRJMEcwIQYI
        KwYBBQUHMAGGFWh0dHA6Ly9yMy5vLmxlbmNyLm9yZzAiBggrBgEFBQcwAoYWaHR0
        cDovL3IzLmkubGVuY3Iub3JnLzArBgNVHREEJDAigiB2YXVsdC5kZXYuYmFoc29m
        dHdhcmVmYWN0b3J5LmNvbTBMBgNVHSAERTBDMAgGBmeBDAECATA3BgsrBgEEAYLf
        EwEBATAoMCYGCCsGAQUFBwIBFhpodHRwOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCC
        AQMGCisGAQQB1nkCBAIEgfQEgfEA7wB1AN+lXqtogk8fbK3uuF9OPlrqzaISpGpe
        jjsSwCBEXCpzAAABgNOGQQoAAAQDAEYwRAIgPwYsmP64GRUkUPegZ7azxvzFQPWn
        950YdpKQpSxaivACIFG6EF+JjHYeNTVCf/gou1/JJTJHtFFnZgdAV7jVU4aNAHYA
        RqVV63X6kSAwtaKJafTzfREsQXS+/Um4havy/HD+bUcAAAGA04ZBLgAABAMARzBF
        AiBCNWrHMAfJbrmDF0+nN7+WHAYxT0x3hketkI7Id7YIMAIhAOxQJGxOx2SikRN9
        oVP435oxpqQ3IaD92fOngbBGjMJoMA0GCSqGSIb3DQEBCwUAA4IBAQBPfyfR2uiE
        N1esyLmzQN8lAx+58uQa2HJV8hq03mzGxCCuOLe6Ur8bOV2Ygq3f6SfVqum+RbJL
        zTZIDsqtVMio93Cw5u5/RgpdGaS/JUXtepp0dFy/vHwh8klvX8HGYtcJHxZ0dFRB
        fhaynGVY8IuitalNkKGq36772BaPjEZnmUPcVnIENfH/KmMHQjTIxLmyRQYIz1UL
        gceovAPR8kVOp/cuCBG/YpoEyTB9LpiNFA3VD5h9pzeSh7gmRM4LLrID8AUrFRsk
        3G9Fix84djl5V6CsX/UsOAAD7IJN8HPRKN6/pUmxA2uZ+U/fvLlGBLXRO42yORJK
        6Cgg9V694sfZ
        -----END CERTIFICATE-----
        -----BEGIN CERTIFICATE-----
        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
        6Cgg9V694sfZ
        -----END CERTIFICATE-----
        -----BEGIN CERTIFICATE-----
        MIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw
        TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
        cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwOTA0MDAwMDAw
        WhcNMjUwOTE1MTYwMDAwWjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg
        RW5jcnlwdDELMAkGA1UEAxMCUjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
        AoIBAQC7AhUozPaglNMPEuyNVZLD+ILxmaZ6QoinXSaqtSu5xUyxr45r+XXIo9cP
        R5QUVTVXjJ6oojkZ9YI8QqlObvU7wy7bjcCwXPNZOOftz2nwWgsbvsCUJCWH+jdx
        sxPnHKzhm+/b5DtFUkWWqcFTzjTIUu61ru2P3mBw4qVUq7ZtDpelQDRrK9O8Zutm
        NHz6a4uPVymZ+DAXXbpyb/uBxa3Shlg9F8fnCbvxK/eG3MHacV3URuPMrSXBiLxg
        Z3Vms/EY96Jc5lP/Ooi2R6X/ExjqmAl3P51T+c8B5fWmcBcUr2Ok/5mzk53cU6cG
        /kiFHaFpriV1uxPMUgP17VGhi9sVAgMBAAGjggEIMIIBBDAOBgNVHQ8BAf8EBAMC
        AYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBIGA1UdEwEB/wQIMAYB
        Af8CAQAwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB8GA1UdIwQYMBaA
        FHm0WeZ7tuXkAXOACIjIGlj26ZtuMDIGCCsGAQUFBwEBBCYwJDAiBggrBgEFBQcw
        AoYWaHR0cDovL3gxLmkubGVuY3Iub3JnLzAnBgNVHR8EIDAeMBygGqAYhhZodHRw
        Oi8veDEuYy5sZW5jci5vcmcvMCIGA1UdIAQbMBkwCAYGZ4EMAQIBMA0GCysGAQQB
        gt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCFyk5HPqP3hUSFvNVneLKYY611TR6W
        PTNlclQtgaDqw+34IL9fzLdwALduO/ZelN7kIJ+m74uyA+eitRY8kc607TkC53wl
        ikfmZW4/RvTZ8M6UK+5UzhK8jCdLuMGYL6KvzXGRSgi3yLgjewQtCPkIVz6D2QQz
        CkcheAmCJ8MqyJu5zlzyZMjAvnnAT45tRAxekrsu94sQ4egdRCnbWSDtY7kh+BIm
        lJNXoB1lBMEKIq4QDUOXoRgffuDghje1WrG9ML+Hbisq/yFOGwXD9RiX8F6sw6W4
        avAuvDszue5L3sz85K+EC4Y/wFVDNvZo4TYXao6Z0f+lQKc0t8DQYzk1OXVu8rp2
        yJMC6alLbBfODALZvYH7n7do1AZls4I9d1P4jnkDrQoxB3UqQ9hVl3LEKQ73xF1O
        yK5GhDDX8oVfGKF5u+decIsH4YaTw7mP3GFxJSqv3+0lUFJoi5Lc5da149p90Ids
        hCExroL1+7mryIkXPeFM5TgO9r0rvZaBFOvV2z0gp35Z0+L4WPlbuEjN/lxPFin+
        HlUjr8gRsI3qfJOQFy/9rKIJR0Y/8Omwt/8oTWgy1mdeHmmjk7j1nYsvC9JSQ6Zv
        MldlTTKB3zhThV1+XWYp6rjd5JW1zbVWEkLNxE7GJThEUG3szgBVGP7pSWTUTsqX
        nLRbwHOoq7hHwg==
        -----END CERTIFICATE-----
        -----BEGIN CERTIFICATE-----
        MIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/
        MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT
        DkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow
        TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
        cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB
        AQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC
        ov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL
        wYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D
        LtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK
        4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5
        bHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y
        sR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ
        Xmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4
        FQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc
        SLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql
        PRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND
        TwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw
        SwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1
        c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx
        +tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB
        ATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu
        b3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E
        U1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu
        MA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC
        5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW
        9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG
        WCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O
        he8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC
        Dfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5
        -----END CERTIFICATE-----
    values:
      # disable autoInit. It should not be used for operations.
      autoInit:
        enabled: false
      global:
        # this is a double negative. Put "false" to enable TLS for passthrough ingress
        tlsDisable: false
      injector:
        extraEnvironmentVars:
          AGENT_INJECT_VAULT_ADDR: "https://vault.dev.bahsoftwarefactory.com"
      server:
        # Increase default resources
        resources:
          requests:
            memory: 8Gi
            cpu: 2000m
          limits:
            memory: 8Gi
            cpu: 2000m
        # disable the Vault provided ingress so that Istio ingress can be used.
        ingress:
          enabled: false
        # Extra environment variable to support high availability
        extraEnvironmentVars:
          # the istio gateway domain
          VAULT_API_ADDR: https://vault.dev.bahsoftwarefactory.com
          VAULT_ADDR: https://127.0.0.1:8200
          VAULT_SKIP_VERIFY: "true"
          VAULT_LOG_FORMAT: "json"
        ha:
          # enable high availability.
          enabled: true
          replicas: 3
          # raft is the license free most simple solution for a distributed filesystem
          raft:
            enabled: true
            setNodeId: true
            # these values should be encrypted to prevent the kms_key_id from being revealed
            config: |
              ui = true

              listener "tcp" {
                tls_disable = 0
                address = "[::]:8200"
                cluster_address = "[::]:8201"
                tls_cert_file = "/vault/tls/tls.crt"
                tls_key_file  = "/vault/tls/tls.key"
              }

              storage "raft" {
                path = "/vault/data"

                retry_join {
                  leader_api_addr = "https://vault-vault-0.vault-vault-internal:8200"
                  leader_client_cert_file = "/vault/tls/tls.crt"
                  leader_client_key_file = "/vault/tls/tls.key"
                  leader_tls_servername = "vault.dev.bahsoftwarefactory.com"
                }

                retry_join {
                  leader_api_addr = "https://vault-vault-1.vault-vault-internal:8200"
                  leader_client_cert_file = "/vault/tls/tls.crt"
                  leader_client_key_file = "/vault/tls/tls.key"
                  leader_tls_servername = "vault.dev.bahsoftwarefactory.com"
                }

                retry_join {
                  leader_api_addr = "https://vault-vault-2.vault-vault-internal:8200"
                  leader_client_cert_file = "/vault/tls/tls.crt"
                  leader_client_key_file = "/vault/tls/tls.key"
                  leader_tls_servername = "vault.dev.bahsoftwarefactory.com"
                }
              }

              seal "awskms" {
                region     = "us-east-1"
                kms_key_id = "bde2b254-f04b-4f48-b5b4-4376120c5181"
                endpoint   = "https://kms.us-east-1.amazonaws.com"
              }

              telemetry {
                prometheus_retention_time = "24h"
                disable_hostname = true
                unauthenticated_metrics_access = true
              }

              service_registration "kubernetes" {}
