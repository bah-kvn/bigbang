domain: stg.bahsoftwarefactory.com
istio:
  enabled: true
  ingressGateways:
    public-ingressgateway:
      type: "LoadBalancer"
      kubernetesResourceSpec:
        serviceAnnotations:
          service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: "kubernetes.io/cluster/c-m-n6rc24wl=owned,env=staging,ingress-type=public"
          service.beta.kubernetes.io/aws-load-balancer-type: nlb
    passthrough-ingressgateway:
      type: "LoadBalancer"
      kubernetesResourceSpec:
        serviceAnnotations:
          service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: "kubernetes.io/cluster/c-m-n6rc24wl=owned,env=staging,ingress-type=passthrough"
          service.beta.kubernetes.io/aws-load-balancer-type: nlb
#          service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-1:729651203190:certificate/625ea41a-a46e-478a-9618-4a2090684d7a"
#          service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
  gateways:
    passthrough:
      ingressGateway: "passthrough-ingressgateway"
      hosts:
        - "*.{{ .Values.domain }}"
      tls:
        mode: "PASSTHROUGH"
istiooperator:
  enabled: true
kiali:
  enabled: true
jaeger:
  enabled: true
eckoperator:
  enabled: false
flux:
  interval: 1m
  rollback:
    cleanupOnFail: false
logging:
  enabled: false
  values:
    elasticsearch:
      master:
        count: 1
        persistence:
          size: 256Mi
        resources:
          requests:
            cpu: 200m
            memory: 1Gi
      data:
        count: 1
        persistence:
          size: 256Mi
        resources:
          requests:
            cpu: 200m
            memory: 1Gi
    kibana:
      count: 1
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
monitoring:
  enabled: true
  values:
    prometheus:
      prometheusSpec:
        resources:
          requests:
            cpu: 200m
            memory: 1Gi
fluentbit:
  enabled: false
  values:
    securityContext:
      privileged: false
clusterAuditor:
  enabled: false
gatekeeper:
  enabled: false
  values:
    violations:
      allowedDockerRegistries:
        parameters:
          repos:
            - registry1.dso.mil
            - k8s.gcr.io
            - registry.uip.sh
    replicas: 1
    controllerManager:
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
    audit:
      resources:
        requests:
          cpu: 200m
          memory: 256Mi
kyverno:
  enabled: false
  values:
    replicaCount: 1
twistlock:
  enabled: false
  values:
    console:
      persistence:
        size: 256Mi
addons:

  keycloak:
    enabled: true
    ingress:
      gateway: "passthrough"

  gitlabRunner:
    enabled: true

  gitlab:
    enabled: true
    flux:
      timeout: 45m
      upgrade:
        remediation:
          retries: 10
    hostnames:
      gitlab: gitlab
      registry: gitlab-registry
    values:
      gitlab:
        webservice:
          minReplicas: 1
          maxReplicas: 1
          helmTests:
            enabled: false
          resources:
            limits:
              cpu: 2
              memory: 4G
            requests:
              cpu: 2
              memory: 4G
        gitaly:
          resources:
            limits:
              cpu: 2
              memory: 4G
            requests:
              cpu: 2
              memory: 4G
        gitlab-shell:
          minReplicas: 1
          maxReplicas: 1
        sidekiq:
          minReplicas: 1
          maxReplicas: 1
      registry:
        hpa:
          minReplicas: 1
          maxReplicas: 1
      global:
        extraEnvFrom:
          OAUTH_GITHUB_API_KEY:
            secretKeyRef:
              name: github-oauth
              key: key
          OAUTH_GITHUB_APP_SECRET:
            secretKeyRef:
              name: github-oauth
              key: secret
          OAUTH_GITHUB_URL:
            secretKeyRef:
              name: github-oauth
              key: url
        appConfig:
          object_store:
            enabled: true
          defaultCanCreateGroup: true
          enableUsagePing: true
          enableImpersonation: true
          defaultTheme: 11
          defaultProjectsFeatures:
            issues: true
            mergeRequests: true
            wiki: true
            snippets: true
            builds: true
            containerRegistry: true
          omniauth:
            enabled: true
            allowSingleSignOn: ['github']
            autoLinkUser: true
            autoSignInWithProvider: 'github'
            syncProfileFromProvider: ['github']
            syncProfileAttributes: ['name', 'email']
            blockAutoCreatedUsers: false
            providers:
              - secret: github
  vault:
    enabled: true
    git:
      tag: "0.20.0-bb.0"
    values:
      autoInit:
        enabled: false
      global:
        tlsDisable: false
      injector:
        extraEnvironmentVars:
          AGENT_INJECT_VAULT_ADDR: "https://vault.stg.bahsoftwarefactory.com"
      ui:
        enabled: true
      server:
        resources:
          requests:
            memory: 8Gi
            cpu: 2000m
          limits:
            memory: 8Gi
            cpu: 2000m
        extraEnvironmentVars:
          VAULT_API_ADDR: https://vault.stg.bahsoftwarefactory.com
          VAULT_ADDR: https://127.0.0.1:8200
          VAULT_SKIP_VERIFY: "true"
          VAULT_LOG_FORMAT: "json"
        ha:
          enabled: true
          replicas: 3
          raft:
            enabled: true
            setNodeId: true
            config: |
              ui = true
              listener "tcp" {
                tls_disable = 0
                address = "[::]:8200"
                cluster_address = "[::]:8201"
                tls_cert_file = "/vault/tls/tls.crt"
                tls_key_file  = "/vault/tls/tls.key"
              }
              storage "raft" {
                path = "/vault/data"
                retry_join {
                  leader_api_addr = "https://vault-vault-0.vault-vault-internal:8200"
                  leader_client_cert_file = "/vault/tls/tls.crt"
                  leader_client_key_file = "/vault/tls/tls.key"
                  leader_tls_servername = "vault.stg.bahsoftwarefactory.com"
                }
                retry_join {
                  leader_api_addr = "https://vault-vault-1.vault-vault-internal:8200"
                  leader_client_cert_file = "/vault/tls/tls.crt"
                  leader_client_key_file = "/vault/tls/tls.key"
                  leader_tls_servername = "vault.stg.bahsoftwarefactory.com"
                }
                retry_join {
                  leader_api_addr = "https://vault-vault-2.vault-vault-internal:8200"
                  leader_client_cert_file = "/vault/tls/tls.crt"
                  leader_client_key_file = "/vault/tls/tls.key"
                  leader_tls_servername = "vault.stg.bahsoftwarefactory.com"
                }
              }
              telemetry {
                prometheus_retention_time = "24h"
                disable_hostname = true
                unauthenticated_metrics_access = true
              }
              service_registration "kubernetes" {}
